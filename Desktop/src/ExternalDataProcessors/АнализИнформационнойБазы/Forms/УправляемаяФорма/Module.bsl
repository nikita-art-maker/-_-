//==============================================================================
// СЕРВИСНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//------------------------------------------------------------------------------

&НаСервере
// Функция инициализирует дерево анализа
//
// Параметры:
//	Нет
//
// Возвращаемое значение:
//	ДеревоЗначений - Начальное дерево анализа
//
Функция ИнициализироватьДеревоАнализа()
	лДеревоАнализа = Новый ДеревоЗначений;
	лДеревоАнализа.Колонки.Добавить("Вид");
	лДеревоАнализа.Колонки.Добавить("Имя");
	лДеревоАнализа.Колонки.Добавить("Кол");
	Возврат лДеревоАнализа;
КонецФункции // ИнициализироватьДеревоАнализа

&НаСервере
// Функция возвращает строку имени периода
//
// Параметр:
//	пДата - Дата - Дата начала периода
//
// Возвращаемое значение:
//	Строка - Строка имени периода
//
Функция СтрокаИмениПериода(пДата)
	Если НЕ ЗначениеЗаполнено(пДата) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Объект.Периодичность = "ГОД" Тогда
		Возврат Формат(пДата, "ДФ=гггг");
	ИначеЕсли Объект.Периодичность = "КВАРТАЛ" Тогда
		Возврат Формат(пДата, "ДФ=""к 'кв. ' гггг""");
	ИначеЕсли Объект.Периодичность = "МЕСЯЦ" Тогда
		Возврат Формат(пДата, "ДФ=""МММ гггг""");
	Иначе
		Возврат Формат(пДата, "ДФ=""дд.ММ.гггг""");
	КонецЕсли;
КонецФункции // СтрокаИмениПериода

&НаСервере
// Процедура выполняет анализ справочников
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализСправочников()
	Если НЕ Объект.АнализСправочников ИЛИ (СписокСправочников.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъеденить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокСправочников Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъеденить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъеденить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(mikr_" + лСтрокаСписка.Значение + ".Ссылка, ""<Пусто>""))" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	Справочник." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
	КонецЦикла;
	
	лЗапрос.Текст = лЗапрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Кол УБЫВ,
	|	Имя";
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.Кол = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если лСтрокаДерева = Неопределено Тогда
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДерева = лСтрокиДерева.Добавить();
			лСтрокаДерева.Вид = 0;
			лСтрокаДерева.Имя = "Справочники";
		КонецЕсли;
		
		лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
		лПодстрокаДерева = лПодстрокиДерева.Добавить();
		лПодстрокаДерева.Вид = 1;
		лПодстрокаДерева.Имя = лВыборка.Имя;
		лПодстрокаДерева.Кол = лВыборка.Кол;
		лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
	КонецЦикла;
КонецПроцедуры // ВыполнитьАнализСправочников

&НаСервере
// Процедура выполняет анализ документов
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализДокументов()
	Если НЕ Объект.АнализДокументов ИЛИ (СписокДокументов.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъединить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаДата = ") КАК Дата,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокДокументов Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъединить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъединить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Дата, " + Объект.Периодичность + лСтрокаДата;
			лСтрокаДата = "),";
		КонецЕсли;
		
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(mikr_" + лСтрокаСписка.Значение + ".Ссылка, ""<Пусто>""))" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	Документ." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
		
		лСтрокаГде = "
		|ГДЕ
		|	";
		
		Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Дата >= &НачПериода";
			лСтрокаГде = "
			|	И ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Дата <= &КонПериода";
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|
			|СГРУППИРОВАТЬ ПО
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Дата, " + Объект.Периодичность + ")";
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Кол УБЫВ,
		|	Имя";
	Иначе
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Имя,
		|	Дата";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
		лЗапрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
		лЗапрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
	КонецЕсли;
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
				лСтрокаДерева = лСтрокиДерева.Добавить();
				лСтрокаДерева.Вид = 2;
				лСтрокаДерева.Имя = "Документы";
			КонецЕсли;
			
			лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
			лПодстрокаДерева = лПодстрокиДерева.Добавить();
			лПодстрокаДерева.Вид = 3;
			лПодстрокаДерева.Имя = лВыборка.Имя;
			лПодстрокаДерева.Кол = лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
	Иначе
		лИмя = "";
		лДеревоАнализа = ИнициализироватьДеревоАнализа();
		
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокаДерева = лДеревоАнализа.Строки.Добавить();
				лСтрокаДерева.Вид = 2;
				лСтрокаДерева.Имя = "Документы";
				лСтрокаДерева.Кол = 0;
			КонецЕсли;
			
			Если лВыборка.Имя <> лИмя Тогда
				лПодстрокаДерева = лСтрокаДерева.Строки.Добавить();
				лПодстрокаДерева.Вид = 3;
				лПодстрокаДерева.Имя = лВыборка.Имя;
				лПодстрокаДерева.Кол = 0;
				лИмя = лВыборка.Имя;
			КонецЕсли;
			
			лПодстрокаДаты = лПодстрокаДерева.Строки.Добавить();
			лПодстрокаДаты.Вид = 22;
			лПодстрокаДаты.Имя = СтрокаИмениПериода(лВыборка.Дата);
			лПодстрокаДаты.Кол = лВыборка.Кол;
			лПодстрокаДерева.Кол = лПодстрокаДерева.Кол + лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
		
		Если лСтрокаДерева <> Неопределено Тогда
			лСтрокаДерева.Строки.Сортировать("Кол Убыв, Имя", Ложь);
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДереваАнализа = лСтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(лСтрокаДереваАнализа, лСтрокаДерева);
			
			лПодстрокиДереваАнализа = лСтрокаДереваАнализа.ПолучитьЭлементы();
			
			Для Каждого лПодстрокаДерева Из лСтрокаДерева.Строки Цикл
				лПодстрокаДереваАнализа = лПодстрокиДереваАнализа.Добавить();
				ЗаполнитьЗначенияСвойств(лПодстрокаДереваАнализа, лПодстрокаДерева);
				
				лПодстрокиДереваДаты = лПодстрокаДереваАнализа.ПолучитьЭлементы();
				
				Для Каждого лПодстрокаДаты Из лПодстрокаДерева.Строки Цикл
					лПодстрокаДереваДаты = лПодстрокиДереваДаты.Добавить();
					ЗаполнитьЗначенияСвойств(лПодстрокаДереваДаты, лПодстрокаДаты);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ВыполнитьАнализДокументов

&НаСервере
// Процедура выполняет анализ планов видов характеристик
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализПлановВидовХарактеристик()
	Если НЕ Объект.АнализПлановВидовХарактеристик ИЛИ (СписокПлановВидовХарактеристик.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъеденить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокПлановВидовХарактеристик Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъеденить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъеденить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(mikr_" + лСтрокаСписка.Значение + ".Ссылка, ""<Пусто>""))" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	ПланВидовХарактеристик." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
	КонецЦикла;
	
	лЗапрос.Текст = лЗапрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Кол УБЫВ,
	|	Имя";
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.Кол = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если лСтрокаДерева = Неопределено Тогда
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДерева = лСтрокиДерева.Добавить();
			лСтрокаДерева.Вид = 4;
			лСтрокаДерева.Имя = "Планы видов характеристик";
		КонецЕсли;
		
		лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
		лПодстрокаДерева = лПодстрокиДерева.Добавить();
		лПодстрокаДерева.Вид = 5;
		лПодстрокаДерева.Имя = лВыборка.Имя;
		лПодстрокаДерева.Кол = лВыборка.Кол;
		лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
	КонецЦикла;
КонецПроцедуры // ВыполнитьАнализПлановВидовХарактеристик

&НаСервере
// Процедура выполняет анализ планов счетов
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализПлановСчетов()
	Если НЕ Объект.АнализПлановСчетов ИЛИ (СписокПлановСчетов.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъеденить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокПлановСчетов Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъеденить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъеденить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(mikr_" + лСтрокаСписка.Значение + ".Ссылка, ""<Пусто>""))" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	ПланСчетов." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
	КонецЦикла;
	
	лЗапрос.Текст = лЗапрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Кол УБЫВ,
	|	Имя";
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.Кол = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если лСтрокаДерева = Неопределено Тогда
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДерева = лСтрокиДерева.Добавить();
			лСтрокаДерева.Вид = 6;
			лСтрокаДерева.Имя = "Планы счетов";
		КонецЕсли;
		
		лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
		лПодстрокаДерева = лПодстрокиДерева.Добавить();
		лПодстрокаДерева.Вид = 7;
		лПодстрокаДерева.Имя = лВыборка.Имя;
		лПодстрокаДерева.Кол = лВыборка.Кол;
		лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
	КонецЦикла;
КонецПроцедуры // ВыполнитьАнализПлановСчетов

&НаСервере
// Процедура выполняет анализ планов видов расчета
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализПлановВидовРасчета()
	Если НЕ Объект.АнализПлановВидовРасчета ИЛИ (СписокПлановВидовРасчета.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъеденить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокПлановВидовРасчета Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъеденить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъеденить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(mikr_" + лСтрокаСписка.Значение + ".Ссылка, ""<Пусто>""))" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	ПланВидовРасчета." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
	КонецЦикла;
	
	лЗапрос.Текст = лЗапрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Кол УБЫВ,
	|	Имя";
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.Кол = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если лСтрокаДерева = Неопределено Тогда
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДерева = лСтрокиДерева.Добавить();
			лСтрокаДерева.Вид = 8;
			лСтрокаДерева.Имя = "Планы видов расчета";
		КонецЕсли;
		
		лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
		лПодстрокаДерева = лПодстрокиДерева.Добавить();
		лПодстрокаДерева.Вид = 9;
		лПодстрокаДерева.Имя = лВыборка.Имя;
		лПодстрокаДерева.Кол = лВыборка.Кол;
		лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
	КонецЦикла;
КонецПроцедуры // ВыполнитьАнализПлановВидовРасчета

&НаСервере
// Процедура выполняет анализ регистров сведений
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализРегистровСведений()
	Если НЕ Объект.АнализРегистровСведений ИЛИ (СписокРегистровСведений.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъединить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаДата = " КАК Дата,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокРегистровСведений Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъединить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъединить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			Если лСтрокаСписка.Пометка Тогда
				лЗапрос.Текст = лЗапрос.Текст + "
				|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Период, " + Объект.Периодичность + ")" + лСтрокаДата;
			Иначе
				лЗапрос.Текст = лЗапрос.Текст + "
				|	&ПустаяДата" + лСтрокаДата;
			КонецЕсли;
			
			лСтрокаДата = ",";
		КонецЕсли;
		
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(1)" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	РегистрСведений." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
		
		лСтрокаГде = "
		|ГДЕ
		|	";
		
		Если лСтрокаСписка.Пометка Тогда
			Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
				лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Период >= &НачПериода";
				лСтрокаГде = "
				|	И ";
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
				лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Период <= &КонПериода";
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			Если лСтрокаСписка.Пометка Тогда
				лЗапрос.Текст = лЗапрос.Текст + "
				|
				|СГРУППИРОВАТЬ ПО
				|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Период, " + Объект.Периодичность + ")";
			Иначе
				лЗапрос.Текст = лЗапрос.Текст + "
				|
				|СГРУППИРОВАТЬ ПО
				|	&ПустаяДата";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Кол УБЫВ,
		|	Имя";
	Иначе
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Имя,
		|	Дата";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
		лЗапрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
		лЗапрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
		лЗапрос.УстановитьПараметр("ПустаяДата", '00010101');
	КонецЕсли;
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
				лСтрокаДерева = лСтрокиДерева.Добавить();
				лСтрокаДерева.Вид = 10;
				лСтрокаДерева.Имя = "Регистры сведений";
			КонецЕсли;
			
			лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
			лПодстрокаДерева = лПодстрокиДерева.Добавить();
			лПодстрокаДерева.Вид = 11;
			лПодстрокаДерева.Имя = лВыборка.Имя;
			лПодстрокаДерева.Кол = лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
	Иначе
		лИмя = "";
		лДеревоАнализа = ИнициализироватьДеревоАнализа();
		
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокаДерева = лДеревоАнализа.Строки.Добавить();
				лСтрокаДерева.Вид = 10;
				лСтрокаДерева.Имя = "Регистры сведений";
				лСтрокаДерева.Кол = 0;
			КонецЕсли;
			
			Если лВыборка.Имя <> лИмя Тогда
				лПодстрокаДерева = лСтрокаДерева.Строки.Добавить();
				лПодстрокаДерева.Вид = 11;
				лПодстрокаДерева.Имя = лВыборка.Имя;
				лПодстрокаДерева.Кол = 0;
				лИмя = лВыборка.Имя;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(лВыборка.Дата) Тогда
				лПодстрокаДаты = лПодстрокаДерева.Строки.Добавить();
				лПодстрокаДаты.Вид = 22;
				лПодстрокаДаты.Имя = СтрокаИмениПериода(лВыборка.Дата);
				лПодстрокаДаты.Кол = лВыборка.Кол;
			КонецЕсли;
			
			лПодстрокаДерева.Кол = лПодстрокаДерева.Кол + лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
		
		Если лСтрокаДерева <> Неопределено Тогда
			лСтрокаДерева.Строки.Сортировать("Кол Убыв, Имя", Ложь);
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДереваАнализа = лСтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(лСтрокаДереваАнализа, лСтрокаДерева);
			
			лПодстрокиДереваАнализа = лСтрокаДереваАнализа.ПолучитьЭлементы();
			
			Для Каждого лПодстрокаДерева Из лСтрокаДерева.Строки Цикл
				лПодстрокаДереваАнализа = лПодстрокиДереваАнализа.Добавить();
				ЗаполнитьЗначенияСвойств(лПодстрокаДереваАнализа, лПодстрокаДерева);
				
				лПодстрокиДереваДаты = лПодстрокаДереваАнализа.ПолучитьЭлементы();
				
				Для Каждого лПодстрокаДаты Из лПодстрокаДерева.Строки Цикл
					лПодстрокаДереваДаты = лПодстрокиДереваДаты.Добавить();
					ЗаполнитьЗначенияСвойств(лПодстрокаДереваДаты, лПодстрокаДаты);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ВыполнитьАнализРегистровСведений

&НаСервере
// Процедура выполняет анализ регистров накопления
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализРегистровНакопления()
	Если НЕ Объект.АнализРегистровНакопления ИЛИ (СписокРегистровНакопления.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъединить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаДата = " КАК Дата,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокРегистровНакопления Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъединить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъединить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Период, " + Объект.Периодичность + ")" + лСтрокаДата;
			лСтрокаДата = ",";
		КонецЕсли;
		
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(1)" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	РегистрНакопления." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
		
		лСтрокаГде = "
		|ГДЕ
		|	";
		
		Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Период >= &НачПериода";
			лСтрокаГде = "
			|	И ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Период <= &КонПериода";
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|
			|СГРУППИРОВАТЬ ПО
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Период, " + Объект.Периодичность + ")";
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Кол УБЫВ,
		|	Имя";
	Иначе
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Имя,
		|	Дата";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
		лЗапрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
		лЗапрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
	КонецЕсли;
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
				лСтрокаДерева = лСтрокиДерева.Добавить();
				лСтрокаДерева.Вид = 12;
				лСтрокаДерева.Имя = "Регистры накопления";
			КонецЕсли;
			
			лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
			лПодстрокаДерева = лПодстрокиДерева.Добавить();
			лПодстрокаДерева.Вид = 13;
			лПодстрокаДерева.Имя = лВыборка.Имя;
			лПодстрокаДерева.Кол = лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
	Иначе
		лИмя = "";
		лДеревоАнализа = ИнициализироватьДеревоАнализа();
		
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокаДерева = лДеревоАнализа.Строки.Добавить();
				лСтрокаДерева.Вид = 12;
				лСтрокаДерева.Имя = "Регистры накопления";
				лСтрокаДерева.Кол = 0;
			КонецЕсли;
			
			Если лВыборка.Имя <> лИмя Тогда
				лПодстрокаДерева = лСтрокаДерева.Строки.Добавить();
				лПодстрокаДерева.Вид = 13;
				лПодстрокаДерева.Имя = лВыборка.Имя;
				лПодстрокаДерева.Кол = 0;
				лИмя = лВыборка.Имя;
			КонецЕсли;
			
			лПодстрокаДаты = лПодстрокаДерева.Строки.Добавить();
			лПодстрокаДаты.Вид = 22;
			лПодстрокаДаты.Имя = СтрокаИмениПериода(лВыборка.Дата);
			лПодстрокаДаты.Кол = лВыборка.Кол;
			лПодстрокаДерева.Кол = лПодстрокаДерева.Кол + лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
		
		Если лСтрокаДерева <> Неопределено Тогда
			лСтрокаДерева.Строки.Сортировать("Кол Убыв, Имя", Ложь);
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДереваАнализа = лСтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(лСтрокаДереваАнализа, лСтрокаДерева);
			
			лПодстрокиДереваАнализа = лСтрокаДереваАнализа.ПолучитьЭлементы();
			
			Для Каждого лПодстрокаДерева Из лСтрокаДерева.Строки Цикл
				лПодстрокаДереваАнализа = лПодстрокиДереваАнализа.Добавить();
				ЗаполнитьЗначенияСвойств(лПодстрокаДереваАнализа, лПодстрокаДерева);
				
				лПодстрокиДереваДаты = лПодстрокаДереваАнализа.ПолучитьЭлементы();
				
				Для Каждого лПодстрокаДаты Из лПодстрокаДерева.Строки Цикл
					лПодстрокаДереваДаты = лПодстрокиДереваДаты.Добавить();
					ЗаполнитьЗначенияСвойств(лПодстрокаДереваДаты, лПодстрокаДаты);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ВыполнитьАнализРегистровНакопления

&НаСервере
// Процедура выполняет анализ регистров бухгалтерии
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализРегистровБухгалтерии()
	Если НЕ Объект.АнализРегистровБухгалтерии ИЛИ (СписокРегистровБухгалтерии.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъединить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаДата = " КАК Дата,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокРегистровБухгалтерии Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъединить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъединить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Период, " + Объект.Периодичность + ")" + лСтрокаДата;
			лСтрокаДата = ",";
		КонецЕсли;
		
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(1)" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	РегистрБухгалтерии." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
		
		лСтрокаГде = "
		|ГДЕ
		|	";
		
		Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Период >= &НачПериода";
			лСтрокаГде = "
			|	И ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".Период <= &КонПериода";
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|
			|СГРУППИРОВАТЬ ПО
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".Период, " + Объект.Периодичность + ")";
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Кол УБЫВ,
		|	Имя";
	Иначе
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Имя,
		|	Дата";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
		лЗапрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
		лЗапрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
	КонецЕсли;
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
				лСтрокаДерева = лСтрокиДерева.Добавить();
				лСтрокаДерева.Вид = 14;
				лСтрокаДерева.Имя = "Регистры бухгалтерии";
			КонецЕсли;
			
			лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
			лПодстрокаДерева = лПодстрокиДерева.Добавить();
			лПодстрокаДерева.Вид = 15;
			лПодстрокаДерева.Имя = лВыборка.Имя;
			лПодстрокаДерева.Кол = лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
	Иначе
		лИмя = "";
		лДеревоАнализа = ИнициализироватьДеревоАнализа();
		
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокаДерева = лДеревоАнализа.Строки.Добавить();
				лСтрокаДерева.Вид = 14;
				лСтрокаДерева.Имя = "Регистры бухгалтерии";
				лСтрокаДерева.Кол = 0;
			КонецЕсли;
			
			Если лВыборка.Имя <> лИмя Тогда
				лПодстрокаДерева = лСтрокаДерева.Строки.Добавить();
				лПодстрокаДерева.Вид = 15;
				лПодстрокаДерева.Имя = лВыборка.Имя;
				лПодстрокаДерева.Кол = 0;
				лИмя = лВыборка.Имя;
			КонецЕсли;
			
			лПодстрокаДаты = лПодстрокаДерева.Строки.Добавить();
			лПодстрокаДаты.Вид = 22;
			лПодстрокаДаты.Имя = СтрокаИмениПериода(лВыборка.Дата);
			лПодстрокаДаты.Кол = лВыборка.Кол;
			лПодстрокаДерева.Кол = лПодстрокаДерева.Кол + лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
		
		Если лСтрокаДерева <> Неопределено Тогда
			лСтрокаДерева.Строки.Сортировать("Кол Убыв, Имя", Ложь);
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДереваАнализа = лСтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(лСтрокаДереваАнализа, лСтрокаДерева);
			
			лПодстрокиДереваАнализа = лСтрокаДереваАнализа.ПолучитьЭлементы();
			
			Для Каждого лПодстрокаДерева Из лСтрокаДерева.Строки Цикл
				лПодстрокаДереваАнализа = лПодстрокиДереваАнализа.Добавить();
				ЗаполнитьЗначенияСвойств(лПодстрокаДереваАнализа, лПодстрокаДерева);
				
				лПодстрокиДереваДаты = лПодстрокаДереваАнализа.ПолучитьЭлементы();
				
				Для Каждого лПодстрокаДаты Из лПодстрокаДерева.Строки Цикл
					лПодстрокаДереваДаты = лПодстрокиДереваДаты.Добавить();
					ЗаполнитьЗначенияСвойств(лПодстрокаДереваДаты, лПодстрокаДаты);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ВыполнитьАнализРегистровБухгалтерии

&НаСервере
// Процедура выполняет анализ регистров расчета
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализРегистровРасчета()
	Если НЕ Объект.АнализРегистровРасчета ИЛИ (СписокРегистровРасчета.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъединить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаДата = " КАК Дата,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокРегистровРасчета Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъединить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъединить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".ПериодРегистрации, " + Объект.Периодичность + ")" + лСтрокаДата;
			лСтрокаДата = ",";
		КонецЕсли;
		
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(1)" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	РегистрРасчета." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
		
		лСтрокаГде = "
		|ГДЕ
		|	";
		
		Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".ПериодРегистрации >= &НачПериода";
			лСтрокаГде = "
			|	И ";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
			лЗапрос.Текст = лЗапрос.Текст + лСтрокаГде + "mikr_" + лСтрокаСписка.Значение + ".ПериодРегистрации <= &КонПериода";
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Объект.Периодичность) Тогда
			лЗапрос.Текст = лЗапрос.Текст + "
			|
			|СГРУППИРОВАТЬ ПО
			|	НАЧАЛОПЕРИОДА(mikr_" + лСтрокаСписка.Значение + ".ПериодРегистрации, " + Объект.Периодичность + ")";
		КонецЕсли;
	КонецЦикла;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Кол УБЫВ,
		|	Имя";
	Иначе
		лЗапрос.Текст = лЗапрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Имя,
		|	Дата";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НачПериода) Тогда
		лЗапрос.УстановитьПараметр("НачПериода", Объект.НачПериода);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.КонПериода) Тогда
		лЗапрос.УстановитьПараметр("КонПериода", Объект.КонПериода);
	КонецЕсли;
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Если ПустаяСтрока(Объект.Периодичность) Тогда
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
				лСтрокаДерева = лСтрокиДерева.Добавить();
				лСтрокаДерева.Вид = 16;
				лСтрокаДерева.Имя = "Регистры расчета";
			КонецЕсли;
			
			лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
			лПодстрокаДерева = лПодстрокиДерева.Добавить();
			лПодстрокаДерева.Вид = 17;
			лПодстрокаДерева.Имя = лВыборка.Имя;
			лПодстрокаДерева.Кол = лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
	Иначе
		лИмя = "";
		лДеревоАнализа = ИнициализироватьДеревоАнализа();
		
		Пока лВыборка.Следующий() Цикл
			Если лВыборка.Кол = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если лСтрокаДерева = Неопределено Тогда
				лСтрокаДерева = лДеревоАнализа.Строки.Добавить();
				лСтрокаДерева.Вид = 16;
				лСтрокаДерева.Имя = "Регистры расчета";
				лСтрокаДерева.Кол = 0;
			КонецЕсли;
			
			Если лВыборка.Имя <> лИмя Тогда
				лПодстрокаДерева = лСтрокаДерева.Строки.Добавить();
				лПодстрокаДерева.Вид = 17;
				лПодстрокаДерева.Имя = лВыборка.Имя;
				лПодстрокаДерева.Кол = 0;
				лИмя = лВыборка.Имя;
			КонецЕсли;
			
			лПодстрокаДаты = лПодстрокаДерева.Строки.Добавить();
			лПодстрокаДаты.Вид = 22;
			лПодстрокаДаты.Имя = СтрокаИмениПериода(лВыборка.Дата);
			лПодстрокаДаты.Кол = лВыборка.Кол;
			лПодстрокаДерева.Кол = лПодстрокаДерева.Кол + лВыборка.Кол;
			лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
		КонецЦикла;
		
		Если лСтрокаДерева <> Неопределено Тогда
			лСтрокаДерева.Строки.Сортировать("Кол Убыв, Имя", Ложь);
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДереваАнализа = лСтрокиДерева.Добавить();
			ЗаполнитьЗначенияСвойств(лСтрокаДереваАнализа, лСтрокаДерева);
			
			лПодстрокиДереваАнализа = лСтрокаДереваАнализа.ПолучитьЭлементы();
			
			Для Каждого лПодстрокаДерева Из лСтрокаДерева.Строки Цикл
				лПодстрокаДереваАнализа = лПодстрокиДереваАнализа.Добавить();
				ЗаполнитьЗначенияСвойств(лПодстрокаДереваАнализа, лПодстрокаДерева);
				
				лПодстрокиДереваДаты = лПодстрокаДереваАнализа.ПолучитьЭлементы();
				
				Для Каждого лПодстрокаДаты Из лПодстрокаДерева.Строки Цикл
					лПодстрокаДереваДаты = лПодстрокиДереваДаты.Добавить();
					ЗаполнитьЗначенияСвойств(лПодстрокаДереваДаты, лПодстрокаДаты);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ВыполнитьАнализРегистровРасчета

&НаСервере
// Процедура выполняет анализ бизнес-процессов
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализБизнесПроцессов()
	Если НЕ Объект.АнализБизнесПроцессов ИЛИ (СписокБизнесПроцессов.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъеденить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокБизнесПроцессов Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъеденить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъеденить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(mikr_" + лСтрокаСписка.Значение + ".Ссылка, ""<Пусто>""))" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	БизнесПроцесс." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
	КонецЦикла;
	
	лЗапрос.Текст = лЗапрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Кол УБЫВ,
	|	Имя";
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.Кол = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если лСтрокаДерева = Неопределено Тогда
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДерева = лСтрокиДерева.Добавить();
			лСтрокаДерева.Вид = 18;
			лСтрокаДерева.Имя = "Бизнес-процессы";
		КонецЕсли;
		
		лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
		лПодстрокаДерева = лПодстрокиДерева.Добавить();
		лПодстрокаДерева.Вид = 19;
		лПодстрокаДерева.Имя = лВыборка.Имя;
		лПодстрокаДерева.Кол = лВыборка.Кол;
		лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
	КонецЦикла;
КонецПроцедуры // ВыполнитьАнализБизнесПроцессов

&НаСервере
// Процедура выполняет анализ задач
//
// Параметры:
//	Нет
//
Процедура ВыполнитьАнализЗадач()
	Если НЕ Объект.АнализЗадач ИЛИ (СписокЗадач.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	лЗапрос = Новый Запрос;
	лСтрокаОбъеденить = "";
	лСтрокаИмя = " КАК Имя,";
	лСтрокаКол = " КАК Кол";
	
	Для Каждого лСтрокаСписка Из СписокЗадач Цикл
		лЗапрос.Текст = лЗапрос.Текст + лСтрокаОбъеденить +
		"ВЫБРАТЬ
		|	""" + лСтрокаСписка.Значение + """" + лСтрокаИмя;
		лСтрокаОбъеденить = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		лСтрокаИмя = ",";
		лЗапрос.Текст = лЗапрос.Текст + "
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(mikr_" + лСтрокаСписка.Значение + ".Ссылка, ""<Пусто>""))" + лСтрокаКол;
		лСтрокаКол = "";
		лЗапрос.Текст = лЗапрос.Текст + "
		|ИЗ
		|	Задача." + лСтрокаСписка.Значение + " КАК mikr_" + лСтрокаСписка.Значение;
	КонецЦикла;
	
	лЗапрос.Текст = лЗапрос.Текст + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Кол УБЫВ,
	|	Имя";
	
	лВыборка = лЗапрос.Выполнить().Выбрать();
	лСтрокаДерева = Неопределено;
	
	Пока лВыборка.Следующий() Цикл
		Если лВыборка.Кол = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если лСтрокаДерева = Неопределено Тогда
			лСтрокиДерева = ДеревоАнализа.ПолучитьЭлементы();
			лСтрокаДерева = лСтрокиДерева.Добавить();
			лСтрокаДерева.Вид = 20;
			лСтрокаДерева.Имя = "Задачи";
		КонецЕсли;
		
		лПодстрокиДерева = лСтрокаДерева.ПолучитьЭлементы();
		лПодстрокаДерева = лПодстрокиДерева.Добавить();
		лПодстрокаДерева.Вид = 21;
		лПодстрокаДерева.Имя = лВыборка.Имя;
		лПодстрокаДерева.Кол = лВыборка.Кол;
		лСтрокаДерева.Кол = лСтрокаДерева.Кол + лВыборка.Кол;
	КонецЦикла;
КонецПроцедуры // ВыполнитьАнализЗадач

//==============================================================================
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ
//------------------------------------------------------------------------------

&НаСервере
Процедура ПриСозданииНаСервере(пОтказ, пСтандартнаяОбработка)
	Для Каждого лМетаданные Из Метаданные.Справочники Цикл
		СписокСправочников.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.Документы Цикл
		СписокДокументов.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.ПланыВидовХарактеристик Цикл
		СписокПлановВидовХарактеристик.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.ПланыСчетов Цикл
		СписокПлановСчетов.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.ПланыВидовРасчета Цикл
		СписокПлановВидовРасчета.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.РегистрыСведений Цикл
		лПериодический = (лМетаданные.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический);
		СписокРегистровСведений.Добавить(лМетаданные.Имя, лМетаданные.Представление(), лПериодический);
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.РегистрыНакопления Цикл
		СписокРегистровНакопления.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.РегистрыБухгалтерии Цикл
		СписокРегистровБухгалтерии.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.РегистрыРасчета Цикл
		СписокРегистровРасчета.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.БизнесПроцессы Цикл
		СписокБизнесПроцессов.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
	
	Для Каждого лМетаданные Из Метаданные.Задачи Цикл
		СписокЗадач.Добавить(лМетаданные.Имя, лМетаданные.Представление());
	КонецЦикла;
КонецПроцедуры // ПриСозданииНаСервере

&НаКлиенте
Процедура ПриОткрытии(пОтказ)
	Если СписокСправочников.Количество() = 0 Тогда
		АнализСправочников = Ложь;
		Элементы.АнализСправочников.Доступность = Ложь;
	Иначе
		Элементы.АнализСправочников.Доступность = Истина;
	КонецЕсли;
	
	Если СписокДокументов.Количество() = 0 Тогда
		АнализДокументов = Ложь;
		Элементы.АнализДокументов.Доступность = Ложь;
	Иначе
		Элементы.АнализДокументов.Доступность = Истина;
	КонецЕсли;
	
	Если СписокПлановВидовХарактеристик.Количество() = 0 Тогда
		АнализПлановВидовХарактеристик = Ложь;
		Элементы.АнализПлановВидовХарактеристик.Доступность = Ложь;
	Иначе
		Элементы.АнализПлановВидовХарактеристик.Доступность = Истина;
	КонецЕсли;
	
	Если СписокПлановСчетов.Количество() = 0 Тогда
		АнализПлановСчетов = Ложь;
		Элементы.АнализПлановСчетов.Доступность = Ложь;
	Иначе
		Элементы.АнализПлановСчетов.Доступность = Истина;
	КонецЕсли;
	
	Если СписокПлановВидовРасчета.Количество() = 0 Тогда
		АнализПлановВидовРасчета = Ложь;
		Элементы.АнализПлановВидовРасчета.Доступность = Ложь;
	Иначе
		Элементы.АнализПлановВидовРасчета.Доступность = Истина;
	КонецЕсли;
	
	Если СписокРегистровСведений.Количество() = 0 Тогда
		АнализРегистровСведений = Ложь;
		Элементы.АнализРегистровСведений.Доступность = Ложь;
	Иначе
		Элементы.АнализРегистровСведений.Доступность = Истина;
	КонецЕсли;
	
	Если СписокРегистровНакопления.Количество() = 0 Тогда
		АнализРегистровНакопления = Ложь;
		Элементы.АнализРегистровНакопления.Доступность = Ложь;
	Иначе
		Элементы.АнализРегистровНакопления.Доступность = Истина;
	КонецЕсли;
	
	Если СписокРегистровБухгалтерии.Количество() = 0 Тогда
		АнализРегистровБухгалтерии = Ложь;
		Элементы.АнализРегистровБухгалтерии.Доступность = Ложь;
	Иначе
		Элементы.АнализРегистровБухгалтерии.Доступность = Истина;
	КонецЕсли;
	
	Если СписокРегистровРасчета.Количество() = 0 Тогда
		АнализРегистровРасчета = Ложь;
		Элементы.АнализРегистровРасчета.Доступность = Ложь;
	Иначе
		Элементы.АнализРегистровРасчета.Доступность = Истина;
	КонецЕсли;
	
	Если СписокБизнесПроцессов.Количество() = 0 Тогда
		АнализБизнесПроцессов = Ложь;
		Элементы.АнализБизнесПроцессов.Доступность = Ложь;
	Иначе
		Элементы.АнализБизнесПроцессов.Доступность = Истина;
	КонецЕсли;
	
	Если СписокЗадач.Количество() = 0 Тогда
		АнализЗадач = Ложь;
		Элементы.АнализЗадач.Доступность = Ложь;
	Иначе
		Элементы.АнализЗадач.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//==============================================================================
// ОБРАБОТКА КОМАНД
//------------------------------------------------------------------------------

&НаКлиенте
Процедура ВыполнитьАнализ(пКоманда)
	лЭлементыДерева = ДеревоАнализа.ПолучитьЭлементы();
	лЭлементыДерева.Очистить();
	Состояние("Анализ справочников");
	ВыполнитьАнализСправочников();
	Состояние("Анализ документов");
	ВыполнитьАнализДокументов();
	Состояние("Анализ планов видов характеристик");
	ВыполнитьАнализПлановВидовХарактеристик();
	Состояние("Анализ планов счетов");
	ВыполнитьАнализПлановСчетов();
	Состояние("Анализ планов видов расчета");
	ВыполнитьАнализПлановВидовРасчета();
	Состояние("Анализ регистров сведений");
	ВыполнитьАнализРегистровСведений();
	Состояние("Анализ регистров накопления");
	ВыполнитьАнализРегистровНакопления();
	Состояние("Анализ регистров бухгалтерии");
	ВыполнитьАнализРегистровБухгалтерии();
	Состояние("Анализ регистров расчета");
	ВыполнитьАнализРегистровРасчета();
	Состояние("Анализ бизнес-процессов");
	ВыполнитьАнализБизнесПроцессов();
	Состояние("Анализ задач");
	ВыполнитьАнализЗадач();
	Состояние();
КонецПроцедуры // ВыполнитьАнализ


&НаСервере
Функция ПечатьСервер()

	ТабДок = Новый ТабличныйДокумент ;	
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПечатнаяФорма");;
	ТабДок.Вывести(Макет);
	
	Возврат ТабДок;

КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	ТабДок = ПечатьСервер();
	ТабДок.Показать();
КонецПроцедуры
